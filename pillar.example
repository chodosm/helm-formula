helm:
  client:

    #
    # The version of the Helm client to install
    #
    # version: 2.6.2
    
    #
    # The path to which the Helm binary should be installed. Defaults to 
    # /usr/bin/helm
    #
    # bin: /usr/bin/helm

    #
    # The path this formula should use as helm home. Defaults to /srv/helm/home;
    # it is recommended to set this to /root/.helm if users will be calling 
    # helm from the command line directly on the target minion
    #
    # helm_home: /srv/helm/home

    #
    # The path where this formula places configuration values files on the
    # target minion. Defaults to /srv/helm/values
    #
    # values_dir: /srv/helm/values

    #
    # The flavor of the helm or kubectl binary to install, as informed by the
    # target minion's OS. For available flavor names, peruse the listing of
    # Helm binaries exposed at:
    # 
    #   https://storage.googleapis.com/kubernetes-helm
    #   
    # Defaults to linux-amd64
    #
    # flavor: linux-amd64

    #
    # The hash for the helm client binary. You must calculate the hash for the
    # version and flavor of the binary you install (per the helm:client:flavor 
    # configuration value)
    # Defaults to the SHA 256 hash for the helm-v2.6.2-linux-amd64.tar.gz binary
    # 
    # 
    # The binary is downloaded from:
    # 
    # https://storage.googleapis.com/kubernetes-helm/helm-v[[ client.version ]]-[[ client.flavor ]].tar.gz
    # 
    # Here is an example command you can use to calculate the sha256 hash for 
    # the binary:
    # 
    # ```
    # shasum -a 256 /path/to/helm-v[[ client.version ]]-linux.amd64.tar.gz
    # ```
    # 
    # download_hash: sha256=ba807d6017b612a0c63c093a954c7d63918d3e324bdba335d67b7948439dbca8

    #
    # Optional listing of release names to which to isolate actions; this is 
    # most useful when manually executing the state from the command line in
    # an attempt to control a specific release. Ignored if a falsey value is
    # supplied (including an empty list)
    #
    # only: []

    #
    # Configurations to manage the cluster's Tiller installation
    #
    # tiller:
      #
      # Whether Tiller should be deployed to the kubernetes cluster as part of
      # this formaul. Defaults to true.
      #
      # install: true

      #
      # The namespace to which Tiller should be installed (only used if 
      # `helm:client:tiller:install` is set to true).
      # Defaults to `kube-system`
      #
      # naamespace: kube-system

      #
      # The host IP or name and port for an existing tiller installation that
      # should be used by the Helm client. Defaults to Helm's default if
      # unspecified.
      #
      # host:

    #
    # Configurations defined to manage the target minion's kubectl installation
    #
    # kubectl:
      
      # 
      # Whether the kubectl config file should be managed by this formula. Set
      # to True to manage the config using the helm:kubectl:config key.
      # 
      # Defaults to True
      # 
      # manage_config: True
      
      #
      # The path to the kubeconfig file that should be used by the Helm client.
      # The kube config file will determine how the Helm client connects to
      # the Kubernetes cluster. Note that if the helm:kubectl:manage_config 
      # pillar value is set to True, the config file will be overwritten
      # with the values configured in helm:kubectl:config.
      # 
      # Defaults to /srv/helm/.kube/config.yml
      #
      # config_file: /srv/helm/.kube/config.yml
      
      #
      # Configuration parameters that should be applied to the kubectl 
      # installation's kubeconfig. Not that this will only be applied to the 
      # kubectl installation managed by this formula.
      # 
      # While the kubectl tool can be configured to connect to multiple 
      # clusters and allow switching between cluster contexts, this kubectl
      # configuration managed by this formula will only be configured with
      # the cluster context details used by this formula.
      #
      # config:
      #   cluster: 
      #     server: https://kubernetes.example.com
      #     certificate-authority-data: base64_of_ca_certificate
      #   cluster_name: kubernetes.example
      #   context_name: kubernetes-example
      #   user:
      #     username: admin
      #     password: uberadminpass
      #   user_name: admin
      #   gce_service_token: yourtokenhere
      

    #
    # The mapping of repository names to urls that should be registered and
    # kept up-to-date with the helm client
    #
    repos:
      mirantisworkloads: https://mirantisworkloads.storage.googleapis.com/
      incubator: https://kubernetes-charts-incubator.storage.googleapis.com/

    #
    # The listing of releases that should be managed by the formula.
    #
    releases:
      zoo1:

        #
        # The name of the release
        #
        name: my-zookeeper

        #
        # The repository name and chart name combination for the chart to
        # release
        #
        chart: mirantisworkloads/zookeeper

        #
        # The version of the helm chart to install
        #
        version: 1.2.0 

        #
        # The namespace to which the release should be deployed
        #
        namespace: helm-example-namespace

        # 
        # Configuration values that should be supplied to the chart.
        #
        values:
          logLevel: INFO 